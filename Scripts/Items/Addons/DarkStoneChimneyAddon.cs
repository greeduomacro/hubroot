/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class DarkStoneChimneyEastAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new DarkStoneChimneyEastAddonDeed();
			}
		}

		[Constructable]
		public DarkStoneChimneyEastAddon()
		{
			AddonComponent ac = null;
			ac = new AddonComponent( 2264 );
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 2265 );
			AddComponent( ac, 0, 0, 0 );

		}

		public DarkStoneChimneyEastAddon( Serial serial )
			: base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class DarkStoneChimneyEastAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new DarkStoneChimneyEastAddon();
			}
		}

		[Constructable]
		public DarkStoneChimneyEastAddonDeed()
		{
			Name = "DarkStoneChimneyEast";
		}

		public DarkStoneChimneyEastAddonDeed( Serial serial )
			: base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class DarkStoneChimneySouthAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new DarkStoneChimneySouthAddonDeed();
			}
		}

		[Constructable]
		public DarkStoneChimneySouthAddon()
		{
			AddonComponent ac = null;
			ac = new AddonComponent( 2263 );
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 2269 );
			AddComponent( ac, 1, 0, 0 );

		}

		public DarkStoneChimneySouthAddon( Serial serial )
			: base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class DarkStoneChimneySouthAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new DarkStoneChimneySouthAddon();
			}
		}

		[Constructable]
		public DarkStoneChimneySouthAddonDeed()
		{
			Name = "DarkStoneChimneySouth";
		}

		public DarkStoneChimneySouthAddonDeed( Serial serial )
			: base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}